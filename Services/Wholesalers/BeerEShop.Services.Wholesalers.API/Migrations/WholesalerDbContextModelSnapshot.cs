// <auto-generated />
using BeerEShop.Services.Wholesalers.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerEShop.Services.Wholesalers.API.Migrations
{
    [DbContext(typeof(WholesalerDbContext))]
    partial class WholesalerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.Inventory", b =>
                {
                    b.Property<long>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("InventoryId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BeerId")
                        .HasColumnType("bigint")
                        .HasColumnName("BeerId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("Quantity");

                    b.Property<long>("WholesalerId")
                        .HasColumnType("bigint")
                        .HasColumnName("WholesalerId");

                    b.HasKey("InventoryId");

                    b.HasIndex("InventoryId")
                        .IsUnique();

                    b.HasIndex("WholesalerId");

                    b.HasIndex(new[] { "BeerId", "WholesalerId" }, "Beer_Wholesaler_ibfk")
                        .IsUnique();

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("WholesalerId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.OrderItem", b =>
                {
                    b.Property<long>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BeerId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.Wholesaler", b =>
                {
                    b.Property<long>("WholesalerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("WholesalerId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNbr")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StoreLocation")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(50)");

                    b.HasKey("WholesalerId");

                    b.HasIndex("WholesalerId")
                        .IsUnique();

                    b.ToTable("Wholesaler");
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.Inventory", b =>
                {
                    b.HasOne("BeerEShop.Services.Wholesalers.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("Inventories")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.Order", b =>
                {
                    b.HasOne("BeerEShop.Services.Wholesalers.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("Orders")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("BeerEShop.Services.Wholesalers.Domain.Entities.Order", null)
                        .WithMany("orderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.Order", b =>
                {
                    b.Navigation("orderItems");
                });

            modelBuilder.Entity("BeerEShop.Services.Wholesalers.Domain.Entities.Wholesaler", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
