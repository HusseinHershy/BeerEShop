// <auto-generated />
using BeerEShop.Services.Wholesalers.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerEShop.Services.Sales.API.Migrations
{
    [DbContext(typeof(SaleDbContext))]
    [Migration("20220619193320_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeerEShop.Services.Sales.API.Data.Entities.Customer", b =>
                {
                    b.Property<long>("CutomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("WholesalerId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(50)");

                    b.HasKey("CutomerId");

                    b.HasIndex("CutomerId")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BeerEShop.Services.Sales.API.Data.Entities.SaleOrder", b =>
                {
                    b.Property<long>("SaleOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("WholesalerId")
                        .HasColumnType("bigint");

                    b.HasKey("SaleOrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("SaleOrders");
                });

            modelBuilder.Entity("BeerEShop.Services.Sales.API.Data.Entities.SaleOrderItem", b =>
                {
                    b.Property<long>("SaleOrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BeerId")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<long>("SaleOrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaleOrderItemId");

                    b.HasIndex("SaleOrderId");

                    b.ToTable("SaleOrderItems");
                });

            modelBuilder.Entity("BeerEShop.Services.Sales.API.Data.Entities.SaleOrder", b =>
                {
                    b.HasOne("BeerEShop.Services.Sales.API.Data.Entities.Customer", "Customer")
                        .WithMany("SaleOrders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BeerEShop.Services.Sales.API.Data.Entities.SaleOrderItem", b =>
                {
                    b.HasOne("BeerEShop.Services.Sales.API.Data.Entities.SaleOrder", null)
                        .WithMany("SaleOderItems")
                        .HasForeignKey("SaleOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerEShop.Services.Sales.API.Data.Entities.Customer", b =>
                {
                    b.Navigation("SaleOrders");
                });

            modelBuilder.Entity("BeerEShop.Services.Sales.API.Data.Entities.SaleOrder", b =>
                {
                    b.Navigation("SaleOderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
